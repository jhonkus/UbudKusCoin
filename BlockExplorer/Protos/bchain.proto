syntax = "proto3";

option csharp_namespace = "GrpcService";


service BChainService {
  rpc GenesisBlock(EmptyRequest) returns (BlockResponse);
  rpc LastBlock(EmptyRequest)  returns (BlockResponse);
  rpc SendCoin(SendRequest)  returns (SendResponse);
  rpc GetBlocks(PagingRequest) returns (BlocksResponse);
  rpc GetBlockByHeight(CommonRequest) returns (BlockResponse);
  rpc GetBlockByHash(CommonRequest) returns (BlockResponse);
  rpc GetTxnByHash(CommonRequest) returns (TxnResponse);
  rpc GetAccount(CommonRequest) returns (AccountResponse);
  rpc GetBalance(CommonRequest) returns (BalanceResponse);
  rpc GetTxnsByAccount(CommonRequest) returns (TxnsResponse);
  rpc GetTxnsByHeight(CommonRequest) returns (TxnsResponse);
  rpc Search(CommonRequest) returns (SearchResponse);
  rpc GetTxns(PagingRequest) returns (TxnsResponse);
}

message SendRequest{
   string txn_id = 1;
   string public_key = 2;
   TxnInput txn_input = 3;
   TxnOutput txn_output = 4;
}

message TxnInput{
	int64 time_stamp = 1;
	string sender_address = 2;
	string signature = 3;
}

message TxnOutput{
	string recipient_address = 1;
	double amount = 2;
	float fee = 3;
}

message PagingRequest{
  int32 page_number = 1;
  int32 result_per_page = 2; 
}

message CommonRequest{
  string txnHash = 1;
  int32  blockHeight = 2;
  string address = 3;
  string blockHash = 4;
  string searchText = 5;
}

message BlocksResponse {
  repeated BlockModel blocks = 1;
}

message BlockResponse {
  BlockModel block = 1;
}

message TxnsResponse {
  repeated TxnModel transactions = 1;
}

message BalanceResponse {
  double balance = 1;
}

message TxnModel {
	string Hash = 1;
	int64 TimeStamp = 2;
	string Sender = 3;
	string Recipient = 4;
	double Amount = 5;
	float Fee = 6;
  int64 Height = 7;
}

message BlockModel {
	int32 Version = 1;
	int64 Height = 2;
	int64 TimeStamp = 3;
	string PrevHash = 4;
	string Hash = 5;
	string Transactions = 6;
  string Validator = 7;
  string MerkleRoot = 8;
  int32  NumOfTx = 9;
  double TotalAmount = 10;
  float TotalReward = 11;
  int32 Difficulty = 12;
}


message EmptyRequest {
}

message SendResponse {
  string result = 1;
}

message TxnResponse {
  TxnModel txn = 1;
}

message AccountResponse {
  double balance = 1;
	int32 numBlockValidate = 2;
  repeated TxnModel transactions = 3;
  repeated BlockModel blocks = 4;
}

message SearchResponse {
  int32 Id = 1;
	string Title = 2;
	string SarchText = 3;
  string Url = 4;
  string status = 5; 
}

